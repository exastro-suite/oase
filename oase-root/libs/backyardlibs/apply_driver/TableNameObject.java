/* Copyright 2019 NEC Corporation

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
     http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

*/
package {{rule_set}};
import java.time.LocalTime;
import java.util.Arrays;
/**
 * This class was automatically generated by the data modeler tool.
 */

public class {{class_name}} implements java.io.Serializable {

    static final long serialVersionUID = 1L;

{{declare_label}}

    private {{rule_set}}.OaseActionUtility acts = new {{rule_set}}.OaseActionUtility();

    public {{class_name}}() {
    }

{{getter_setter}}

    public {{rule_set}}.OaseActionUtility getActs() {
        return this.acts;
    }

    public void setActs({{rule_set}}.OaseActionUtility acts) {
        this.acts = acts;
    }

{{constructor}}

    public Boolean isAfter(java.lang.String eventTimeStr, java.lang.String fromStr) {

        Boolean result = false;

        LocalTime fromTime = LocalTime.parse(fromStr);
        LocalTime eventTime = LocalTime.parse(eventTimeStr);

        result = eventTime.equals(fromTime) == true || eventTime.isAfter(fromTime) == true;

        return result;
    }

    public Boolean isBefore(java.lang.String eventTimeStr, java.lang.String toStr) {

        Boolean result = false;

        LocalTime toTime = toStr.equals("24:00") ? LocalTime.MAX : LocalTime.parse(toStr);
        LocalTime eventTime = eventTimeStr.equals("24:00") ? LocalTime.MAX : LocalTime.parse(eventTimeStr);
        
        result = eventTime.equals(toTime) == true || eventTime.isBefore(toTime) == true;

        return result;
    }
}
